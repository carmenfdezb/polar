#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'types.pb'; rescue LoadError; end
begin; require 'structures.pb'; rescue LoadError; end
begin; require 'exercise_phases.pb'; rescue LoadError; end
begin; require 'training_session_target.pb'; rescue LoadError; end

module PolarData
  # forward declarations
  class PbSteadyRacePaceResult < ::ProtocolBuffers::Message; end
  class PbExerciseTargetInfo < ::ProtocolBuffers::Message; end

  class PbSteadyRacePaceResult < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_data.PbSteadyRacePaceResult"

    required ::PbDuration, :completed_time, 1
    optional :uint32, :average_heartrate, 2
    optional :float, :average_speed, 3
  end

  class PbExerciseTargetInfo < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_data.PbExerciseTargetInfo"

    required ::PbExerciseTargetType, :target_type, 1
    required :uint32, :index, 2
    optional ::PbOneLineText, :name, 3
    optional :bool, :target_reached, 4
    optional ::PbDuration, :end_time, 5
    optional ::PbSportIdentifier, :sport_id, 6
    optional ::PbVolumeTarget, :volume_target, 7
    optional ::PolarData::PbPhases, :phases, 8
    optional ::PbRouteId, :route, 9
    optional ::PolarData::PbSteadyRacePace, :steady_race_pace, 10
    optional ::PolarData::PbSteadyRacePaceResult, :steady_race_pace_result, 11
  end

end
